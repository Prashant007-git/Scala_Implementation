[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\JDCLOT~1\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\JDCLOT~1\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 326.5347ms
[debug]       Load.loadUnit: defsScala took 1.7466ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.381 ms
[debug]           Load.resolveProject(global-plugins) took 423.0995ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, plugins: List(<none>))) took 484.9859ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 691.8248ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2782ms
[debug]     Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/.sbt/1.0/plugins/, ...) took 1132.5401ms
[debug]   Load.apply: load took 3634.6824ms
[debug]   Load.apply: resolveProjects took 8.0697ms
[debug]   Load.apply: finalTransforms took 93.5703ms
[debug]   Load.apply: config.delegates took 16.6215ms
[debug]   Load.apply: Def.make(settings)... took 2266.8117ms
[debug]   Load.apply: structureIndex took 173.9794ms
[debug]   Load.apply: mkStreams took 1.8665ms
[info] loading global plugins from C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 22397.166ms
[debug]           Load.loadUnit: plugins took 44.3513ms
[debug]           Load.loadUnit: defsScala took 0.0066ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project
[debug]             Load.loadUnit: mkEval took 72.7328ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.7824 ms
[info] loading settings for project scalaimplement-build from idea6.sbt ...
[debug]               Load.resolveProject(scalaimplement-build) took 8.013ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaimplement-build, base: C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, plugins: List(<none>))) took 12.6789ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, returning: (scalaimplement-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 335.0795ms
[debug]           Load.loadUnit: cleanEvalClasses took 72.9014ms
[debug]         Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/project/, ...) took 454.151ms
[debug]       Load.apply: load took 456.2679ms
[debug]       Load.apply: resolveProjects took 0.1341ms
[debug]       Load.apply: finalTransforms took 12.1159ms
[debug]       Load.apply: config.delegates took 0.7085ms
[debug]       Load.apply: Def.make(settings)... took 134.7007ms
[debug]       Load.apply: structureIndex took 33.0847ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4047.4467ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement
[debug]       Load.loadUnit: mkEval took 0.3269ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7117 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 38.3785ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement, plugins: List(<none>))) took 45.503ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 646.7252ms
[debug]     Load.loadUnit: cleanEvalClasses took 246.294ms
[debug]   Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/, ...) took 4941.9921ms
[debug] Load.apply: load took 4944.3445ms
[debug] Load.apply: resolveProjects took 0.1597ms
[debug] Load.apply: finalTransforms took 42.802ms
[debug] Load.apply: config.delegates took 0.3892ms
[debug] Load.apply: Def.make(settings)... took 102.3537ms
[debug] Load.apply: structureIndex took 23.4573ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to ScalaImplement (in build file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53176 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53176, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaImplement (in build file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/)
[debug] > Exec(idea-shell, None, None)
