[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\JDCLOT~1\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\JDCLOT~1\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 126.2282ms
[debug]       Load.loadUnit: defsScala took 0.4003ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 138.5139 ms
[debug]           Load.resolveProject(global-plugins) took 62.9076ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, plugins: List(<none>))) took 239.0786ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 268.9344ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3083ms
[debug]     Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/.sbt/1.0/plugins/, ...) took 407.123ms
[debug]   Load.apply: load took 1191.8371ms
[debug]   Load.apply: resolveProjects took 7.1384ms
[debug]   Load.apply: finalTransforms took 78.4439ms
[debug]   Load.apply: config.delegates took 10.3035ms
[debug]   Load.apply: Def.make(settings)... took 1814.4006ms
[debug]   Load.apply: structureIndex took 133.5773ms
[debug]   Load.apply: mkStreams took 2.3729ms
[info] loading global plugins from C:\Users\JD Clothing pvt Ltd\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5053.2955ms
[debug]           Load.loadUnit: plugins took 37.2516ms
[debug]           Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project
[debug]             Load.loadUnit: mkEval took 10.8345ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.586 ms
[info] loading settings for project scalaimplement-build from idea5.sbt ...
[debug]               Load.resolveProject(scalaimplement-build) took 3.5532ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaimplement-build, base: C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, plugins: List(<none>))) took 12.8144ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project, returning: (scalaimplement-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 291.7405ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.1741ms
[debug]         Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/project/, ...) took 339.9669ms
[debug]       Load.apply: load took 343.4032ms
[debug]       Load.apply: resolveProjects took 0.3106ms
[debug]       Load.apply: finalTransforms took 11.3323ms
[debug]       Load.apply: config.delegates took 0.7103ms
[debug]       Load.apply: Def.make(settings)... took 177.5202ms
[debug]       Load.apply: structureIndex took 53.2537ms
[debug]       Load.apply: mkStreams took 0.0045ms
[info] loading project definition from C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1313.5584ms
[debug]     Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement
[debug]       Load.loadUnit: mkEval took 0.3369ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4531 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 39.8689ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement, plugins: List(<none>))) took 46.7425ms
[debug] [Loading] Done in C:\Users\JD Clothing pvt Ltd\Desktop\scala\Projectwithsbt\ScalaImplement, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 165.5369ms
[debug]     Load.loadUnit: cleanEvalClasses took 104.5635ms
[debug]   Load.loadUnit(file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/, ...) took 1585.015ms
[debug] Load.apply: load took 1587.6167ms
[debug] Load.apply: resolveProjects took 0.1601ms
[debug] Load.apply: finalTransforms took 32.7398ms
[debug] Load.apply: config.delegates took 0.7116ms
[debug] Load.apply: Def.make(settings)... took 104.0147ms
[debug] Load.apply: structureIndex took 49.2215ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to ScalaImplement (in build file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53176 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53176, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaImplement (in build file:/C:/Users/JD%20Clothing%20pvt%20Ltd/Desktop/scala/Projectwithsbt/ScalaImplement/)
[debug] > Exec(idea-shell, None, None)
